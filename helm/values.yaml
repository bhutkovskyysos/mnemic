
# Mnemic backend component
backend:
  name: mnemic-backend
  replicaCount: 1
  image:
    repository: jpazarzis/mnemic-backend # TODO: move to ECR eventually.
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    # limits: # dynamo DB stores everything in memory. Pod restart will cause data loss
    #   cpu: 100m
    #   memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    type: LoadBalancer
    name: backend-service
    internalPort: 12013
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: udp
      service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
      #service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      #service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
      service.beta.kubernetes.io/aws-load-balancer-scheme: internal
  ingress:
    enabled: false
    hosts:
      - mnemic-backend.dev.rapidsos.com
    path: /
    annotations:
      kubernetes.io/ingress.class: nginx-internal
      external-dns.integration: enabled
    tls:
      - hosts:
          - mnemic-backend.dev.rapidsos.com
        secretName: cert-manager-letsencrypt-rapidsos-com-tls


# Mnemic frontend component
frontend:
  name: mnemic-frontend
  replicaCount: 1
  image:
    repository: jpazarzis/mnemic-front-end # TODO: move to ECR eventually.
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    name: frontend-service
    internalPort: 12111
  ingress:
    enabled: true
    hosts:
      - mnemic.dev.rapidsos.com
    path: /
    annotations:
      kubernetes.io/ingress.class: nginx-internal
      external-dns.integration: enabled
    tls:
      - hosts:
          - mnemic.dev.rapidsos.com
        secretName: cert-manager-letsencrypt-rapidsos-com-tls

# Generic settings
postgresConnString: "postgresql://XXX:XXXX@rds-write-mco-us-east-1.dev.rapidsos.com:5432/mnemic"
